---
import RootLayout from "@/layouts/RootLayout.astro";
import ListLayoutWithTags from "@/layouts/ListLayoutWithTags.astro";
import { getCollection } from "astro:content";
import {
  getPostSlug,
  isPostPublished,
  filterPostsByTag,
  getAllTags,
  getOriginalTagCase,
  resolvePostImages,
} from "@/lib/utils-blog";

export async function getStaticPaths() {
  const posts = await getCollection("blog", isPostPublished);
  const tags = getAllTags(posts);

  return tags.map((normalizedTag) => {
    // Convert normalized tag to hyphenated format for URL
    const hyphenatedTag = normalizedTag.replace(/\s+/g, "-");

    return {
      params: { tag: hyphenatedTag },
      props: { tag: hyphenatedTag, posts },
    };
  });
}

const { tag, posts } = Astro.props;

// Get the original tag case for display
const originalTag = getOriginalTagCase(posts, tag.replace(/-/g, " "));

// Filter posts by tag (convert hyphenated tag back to normalized for filtering)
const normalizedTag = tag.replace(/-/g, " ");
const filteredPosts = filterPostsByTag(posts, normalizedTag);

// Transform posts to match the expected interface
const transformedPosts = filteredPosts.map((post) => ({
  path: `blog/${getPostSlug(post)}`,
  date: post.data.date,
  title: post.data.title,
  summary: post.data.summary,
  tags: post.data.tags || [],
  images: resolvePostImages(post),
}));
---

<RootLayout>
  <ListLayoutWithTags title={originalTag} posts={transformedPosts} />
</RootLayout>
